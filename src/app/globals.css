@import "tailwindcss";
@import "tw-animate-css";

/* --- Tailwind v4 の色名/半径 → あなたのCSS変数 ---------------
   これが無いと bg-card / text-foreground などが解決できず崩れます。
---------------------------------------------------------------- */
@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);

  --color-accent: var(--accent);
  --color-accent-foreground: var(--foreground);

  --color-card: var(--card);
  --color-card-foreground: var(--foreground);

  /* shadcnやborderユーティリティが参照する標準のボーダー色 */
  --color-border: var(--border);

  /* 角丸トークン（shadcnの rounded-lg 等が参照） */
  --radius-sm: calc(var(--radius-lg) - 4px);
  --radius-md: calc(var(--radius-lg) - 2px);
  --radius-lg: var(--radius-lg);
  --radius-xl: calc(var(--radius-lg) + 4px);

  /*token for button*/
  --radius-btn: 12px;

  /*shadow*/
  --shadow-lift:     3px 3px 0 var(--border-strong);  /* ホバー時に少し強く */
  --shadow-pressed:  2px 2px 0 var(--border-strong);  /* 押下で影を短く（名称を一本化） */

  /* === neobrutalism.dev bridge tokens (colors / radius / shadow / spacing) === */
  /* colors */
  --color-main: var(--primary);
  --color-main-foreground: var(--primary-foreground);
  --color-secondary-background: var(--card);
  /* radius */
  --radius-base: var(--radius-lg);        /* rounded-base → あなたの --radius-lg に接続 */
  /* shadows（box-shadowスケール） */
  --shadow-shadow: var(--shadow-strong);  /* shadow-shadow クラス用の実体 */
  /* translate 量（影打ち消し用） */
  --spacing-boxShadowX: 3px;
  --spacing-boxShadowY: 3px;
  --spacing-reverseBoxShadowX: -3px;
  --spacing-reverseBoxShadowY: -3px;
  /* weight（使われる“font-base”に対応。中身はお好みで） */
  --font-weight-base: 600;
} 

/* --- あなたの“ポップ”テーマ（唯一の真実） -------------------- */
:root {
  --background: #FFFBE6;
  --foreground: #1A1A1A;

  --primary: #FF5C8A;
  --primary-foreground: #111111;

  --accent: #00C2FF;
  --card: #FFF2B3;

  /* 標準のボーダー色（細線用）。太枠は --border-strong を直接参照 */
  --border: #D5CFA9;
  --border-strong: #1A1A1A;

  --radius-lg: 16px;
  --shadow-strong: 3px 3px 0 var(--border-strong);
}



/* --- 背景パターン（任意） ------------------------------------- */
.grid-bg{
  background-image:
    linear-gradient(to right, rgba(26,26,26,.08) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(26,26,26,.08) 1px, transparent 1px);
  background-size: 32px 32px;
}
.dot-bg{
  background:
    radial-gradient(circle at 3px 3px, rgba(0,0,0,0.3) 1px, transparent 1px);
  background-size: 16px 16px;
}

.grid-dot-bg{
  background-image:
    radial-gradient(circle at 1px 1px, rgba(26,26,26,.10) 1px, transparent 1px),
    linear-gradient(to right, rgba(26,26,26,.06) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(26,26,26,.06) 1px, transparent 1px);
  background-size: 16px 16px, 32px 32px, 32px 32px;
}

/* 上部に淡いアクセントの“ツートン帯”を敷く */
.two-tone-band{
  --band-h: 20svh; /* 好みで 16-30svh */
  background-image:
    linear-gradient(0deg, var(--primary) , var(--band-h), transparent var(--band-h));
  background-repeat: no-repeat;
}

/* --- ベース適用 ------------------------------------------------ */
@layer base {
    * { @apply border-border; }
  html { scroll-behavior: smooth; }
  body { @apply bg-background text-foreground antialiased; }
  /* iOS等のタップ波紋を抑制 */
  a, button { -webkit-tap-highlight-color: transparent; }
  /* Reduced Motion に配慮 */
  @media (prefers-reduced-motion: reduce) {
    * { animation-duration: 0.001ms !important; transition-duration: 0.001ms !important; }
  }
}

@layer utilities {
  .page      { @apply mx-auto max-w-screen-lg px-4 sm:px-6 lg:px-8 py-6; }
  .card-grid { @apply grid gap-4 md:gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3; }
  .actions   { @apply flex flex-col sm:flex-row gap-3; }
  .h1-fluid  { font-size: clamp(1.75rem, 5vw, 2.5rem); font-weight: 800; letter-spacing: -0.01em; }
  /* 共通プレス演出（右下影×微小移動） */
  .pressable {
    transition: transform 160ms cubic-bezier(.2,.9,.2,1), box-shadow 160ms, filter 160ms;
    will-change: transform, box-shadow;
  }
  .pressable:hover    { box-shadow: var(--shadow-lift); }
  .pressable:active   { transform: translateY(1px); box-shadow: var(--shadow-pressed); }
  .pressable:focus-visible { outline: none; box-shadow: var(--shadow-lift); }
}

/*正誤用画面フラッシュアニメーション*/
@keyframes scaleIn {
  0% { transform: scale(0.5); opacity: 0; }
  50% { transform: scale(1.2); opacity: 1; }
  100% { transform: scale(1); opacity: 1; }
}

.animate-scaleIn {
  animation: scaleIn 0.6s ease-out forwards;
}
